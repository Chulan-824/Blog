(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{517:function(s,t,a){s.exports=a.p+"assets/img/jsx-1.24dbde95.png"},518:function(s,t,a){s.exports=a.p+"assets/img/jsx-2.59d95ac6.png"},561:function(s,t,a){"use strict";a.r(t);var e=a(64),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"实现-jsx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-jsx"}},[s._v("#")]),s._v(" 实现 JSX")]),s._v(" "),e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("p",[s._v("React项目结构：")]),s._v(" "),e("ul",[e("li",[s._v("react（宿主环境无关的公用方法）")]),s._v(" "),e("li",[s._v("react-reconciler（协调器的实现，宿主环境无关）")]),s._v(" "),e("li",[s._v("各种宿主环境的包")]),s._v(" "),e("li",[s._v("shared（公用辅助方法，宿主环境无关）")])]),s._v(" "),e("p",[s._v("JSX 属于 react 包")]),s._v(" "),e("p",[s._v("在 packages 目录下创建 react 文件夹，进入文件夹目录 初始化 package.json")]),s._v(" "),e("p",[s._v("在 package.json 中 main 字段描述的是项目入口文件，对应的是 CommonJS 规范，由于我们打包规范选择的是 rollup，rollup 对应的是 ESM 规范，所以将 main 字段改为 module")]),s._v(" "),e("h2",{attrs:{id:"jsx-转换是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx-转换是什么"}},[s._v("#")]),s._v(" JSX 转换是什么")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://babeljs.io/repl#?browsers=defaults&build=&builtIns=false&corejs=3.6&spec=false&loose=false&code_lz=DwEwlgbgfAjATAZmAenNIA&debug=false&forceAllTransforms=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=react%2Cstage-2&prettier=false&targets=&version=7.19.5&externalPlugins=&assumptions=%7B%7D",target:"_blank",rel:"noopener noreferrer"}},[s._v("JSX转换 playground"),e("OutboundLink")],1)]),s._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:a(517),width:"45%"}}),s._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:a(518),width:"45%"}}),s._v(" "),e("p",[s._v("在上述图中，左边输入一段 JSX 代码 经过 babel 编译转换成 右侧 React.createElement/_jsx 方法的调用，这个从左侧到右侧转变的过程叫做 JSX 的转换")]),s._v(" "),e("p",[s._v("为什么两种模式下转换后的结果不一样呢？")]),s._v(" "),e("p",[s._v("可以理解为在 react 17 版本之前，转换结果为 React.createElement，在 17 版本之后转换的结果为 _jsx")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" jsx "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" _jsx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react/jsx-runtime"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*#__PURE__*/")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("_jsx")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"div"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("children")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 或")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*#__PURE__*/")]),s._v("React"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"div"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("包括两部分：")]),s._v(" "),e("ul",[e("li",[s._v("编译时")]),s._v(" "),e("li",[s._v("运行时 jsx 方法或 React.createElement 方法的实现（包括dev、prod两个环境）")])]),s._v(" "),e("p",[s._v("编译时由 babel 编译实现，我们来实现运行时，工作量包括：")]),s._v(" "),e("ul",[e("li",[s._v("实现jsx方法")]),s._v(" "),e("li",[s._v("实现打包流程")]),s._v(" "),e("li",[s._v("实现调试打包结果的环境")])]),s._v(" "),e("h2",{attrs:{id:"实现-jsx-方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-jsx-方法"}},[s._v("#")]),s._v(" 实现 JSX 方法")]),s._v(" "),e("ul",[e("li",[s._v("jsxDEV 方法（dev 环境）")]),s._v(" "),e("li",[s._v("jsx 方法（prod 环境）")]),s._v(" "),e("li",[s._v("React.createElement 方法")])]),s._v(" "),e("h2",{attrs:{id:"实现-jsx-打包流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现-jsx-打包流程"}},[s._v("#")]),s._v(" 实现 JSX 打包流程")]),s._v(" "),e("p",[s._v("对应上述两3方法，打包对应文件：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("react/jsx-dev-runtime.js（dev环境）")])]),s._v(" "),e("li",[e("p",[s._v("react/jsx-rumtime.js（prod环境）")])]),s._v(" "),e("li",[e("p",[s._v("React")])])]),s._v(" "),e("p",[s._v("打包流程中需要安装的rollup plugin与node包：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("pnpm")]),s._v(" i -D -w rimraf rollup-plugin-generate-package-json rollup-plugin-typescript2 @rollup/plugin-commonjs\n")])])]),e("ul",[e("li",[s._v("rimraf 每次打包前删除文件（dist mac os 可以直接使用 rm -rf）")]),s._v(" "),e("li",[s._v("rollup-plugin-generate-package-json  打包目录下自动生成 package.json 文件")]),s._v(" "),e("li",[s._v("rollup-plugin-typescript2 打包过程中解析源码中的 typescript 语法")]),s._v(" "),e("li",[s._v("@rollup/plugin-commonjs 解析 commanjs 规范")])]),s._v(" "),e("SideTitle",{attrs:{page:s.$page}})],1)}),[],!1,null,null,null);t.default=r.exports}}]);